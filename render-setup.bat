@echo off
echo 🚀 StudentHub Render Deployment Setup

echo.
echo This script will help you prepare for Render deployment
echo.

echo [STEP 1] Checking Git repository...
git status >nul 2>&1
if %errorlevel% neq 0 (
    echo [ERROR] This directory is not a Git repository
    echo Please run: git init
    echo Then add your files: git add .
    echo And commit: git commit -m "Initial commit"
    pause
    exit /b 1
) else (
    echo ✅ Git repository found
)

echo.
echo [STEP 2] Checking required files...

if exist "render.yaml" (
    echo ✅ render.yaml found
) else (
    echo ❌ render.yaml not found - this should have been created
)

if exist "backend\package.json" (
    echo ✅ backend\package.json found
) else (
    echo ❌ backend\package.json not found
)

if exist "frontend\package.json" (
    echo ✅ frontend\package.json found
) else (
    echo ❌ frontend\package.json not found
)

echo.
echo [STEP 3] Testing builds locally (optional)...
set /p test_build="Do you want to test the build locally? (y/n): "

if /i "%test_build%"=="y" (
    echo.
    echo Testing frontend build...
    cd frontend
    call npm ci
    call npm run build
    if %errorlevel% neq 0 (
        echo ❌ Frontend build failed
        pause
        exit /b 1
    ) else (
        echo ✅ Frontend build successful
    )
    
    echo.
    echo Testing backend setup...
    cd ..\backend
    call npm ci --production
    if %errorlevel% neq 0 (
        echo ❌ Backend setup failed
        pause
        exit /b 1
    ) else (
        echo ✅ Backend setup successful
    )
    
    cd ..
    echo.
    echo ✅ Local builds successful!
)

echo.
echo [STEP 4] Pre-deployment checklist
echo.
echo Before deploying to Render, make sure you have:
echo.
echo Required Services:
echo □ MongoDB Atlas account and cluster created
echo □ Database user created with read/write access
echo □ Network access set to "Allow from anywhere"
echo □ Connection string copied (with password filled in)
echo.
echo Optional Services:
echo □ Cloudinary account for image uploads (recommended)
echo □ Cloudinary credentials (Cloud Name, API Key, API Secret)
echo.
echo Git Repository:
echo □ Code pushed to GitHub/GitLab/Bitbucket
echo □ Repository is public or you have Render connected to your Git provider
echo.
echo Render Account:
echo □ Render account created at https://render.com
echo.

echo.
echo [STEP 5] Environment Variables
echo.
echo You'll need to set these in Render dashboard:
echo.
echo Required:
echo   MONGO_URI = mongodb+srv://username:password@cluster.mongodb.net/studenthub
echo   NODE_ENV = production
echo   CORS_ORIGIN = https://your-app-name.onrender.com
echo.
echo Optional:
echo   CLOUDINARY_CLOUD_NAME = your-cloud-name
echo   CLOUDINARY_API_KEY = your-api-key  
echo   CLOUDINARY_API_SECRET = your-api-secret
echo.
echo Note: JWT_SECRET will be auto-generated by Render
echo       PORT will be auto-set by Render
echo.

echo.
echo [STEP 6] Next Steps
echo.
echo 1. Push your code to Git if you haven't already:
echo    git add .
echo    git commit -m "Prepare for Render deployment"
echo    git push origin main
echo.
echo 2. Go to https://dashboard.render.com
echo    - Click "New +" -^> "Web Service"
echo    - Connect your Git repository
echo    - Render will detect render.yaml automatically
echo    - Add environment variables as shown above
echo    - Click "Create Web Service"
echo.
echo 3. Monitor the build process in Render dashboard
echo    Build time: ~5-10 minutes
echo.
echo 4. Once deployed, test your app:
echo    - Visit: https://your-app-name.onrender.com
echo    - Check health: https://your-app-name.onrender.com/health
echo.

echo.
echo 📚 For detailed instructions, see RENDER-DEPLOYMENT.md
echo.
echo 🎉 Your StudentHub app is ready for Render deployment!
echo.

pause
