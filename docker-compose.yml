version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: studenthub-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
      MONGO_INITDB_DATABASE: studenthub
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - studenthub-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: studenthub-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - studenthub-network

  # StudentHub Application
  app:
    build: .
    container_name: studenthub-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGO_URI: mongodb://admin:adminpassword@mongodb:27017/studenthub?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-here}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      REDIS_URL: redis://redis:6379
    volumes:
      - uploads_data:/app/uploads
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
    networks:
      - studenthub-network

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: studenthub-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - uploads_data:/var/www/uploads:ro
    depends_on:
      - app
    networks:
      - studenthub-network

volumes:
  mongodb_data:
  redis_data:
  uploads_data:

networks:
  studenthub-network:
    driver: bridge
